#!/bin/sh
CURRENT=`git branch | grep "\*" | cut -d' ' -f2`

# default settings
explaining=false
verbose=true
run=true

printUsage() {
  echo "usage: $0 [options] [remote]"
  echo
  echo "  -h  --help                  Show this message"
  echo "  -v  --verbose               Show all commands before running them (default: on)"
  echo "  -q  --quiet                 Don't display commands before running them (default: off)"
  echo "  -e  --explain  --dry-run    Don't actually run commands (default: off)"
  echo
  echo "  remote                      Which remote we should push to (default: origin)"
  echo
}

for arg in "$@"; do
  case $arg
  in
    -e | --explain | --dry-run)
      explain=true
      verbose=true
      run=false
      ;;
    -v | --verbose)
      verbose=true
      ;;
    -q | --quiet)
      verbose=false
      ;;
    -h | --help)
      printUsage
      exit
      ;;
    -*)
      echo "$0: unrecognized parameter '$arg'"
      printUsage
      exit 1
      ;;
    *)
      REMOTE=$arg
  esac
done

GIT=`which git`

git() {
  test "$verbose" = true && echo "+ git $@"
  test "$run"     = true && eval "$GIT $@"
}

if [[ "$explain" == true ]]; then
  echo "These are the commands that would be run:"
fi

if [[ -z "$REMOTE" ]]; then
  REMOTE=`$GIT config branch.$CURRENT.remote`
fi

if [[ -z "$REMOTE" ]]; then
  REMOTE=origin
fi

TRACK=`$GIT config branch.$CURRENT.merge`

if [[ -z "$TRACK" ]]; then
  TRACK=refs/heads/master
fi

TRACK_BRANCH=${TRACK/refs\/heads\//}

if [[ "$CURRENT" != "$TRACK_BRANCH" ]]; then
  git checkout $TRACK_BRANCH
fi

$GIT svn info >/dev/null 2>/dev/null
if [[ $? == 0 ]]; then
  TYPE="git-svn"
else
  TYPE="git"
fi

if [[ "$TYPE" == "git-svn" ]]; then
  git rebase ${CURRENT}
  git svn dcommit
else
  if [[ "$CURRENT" != "$TRACK_BRANCH" ]]; then
    git merge ${CURRENT}
  fi
  git push ${REMOTE} ${TRACK_BRANCH}
fi

if [[ "$CURRENT" != "$TRACK_BRANCH" ]]; then
  git checkout ${CURRENT}
fi

if [[ "$TYPE" == "git-svn" ]]; then
  git svn rebase
fi
