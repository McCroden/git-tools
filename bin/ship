#!/bin/sh

CURRENT=$(git symbolic-ref -q HEAD || git rev-parse HEAD)
CURRENT=${CURRENT#refs/heads/}

# default settings
explaining=false
verbose=true
run=true

printUsage() {
  echo "usage: $0 [options] [remote]"
  echo
  echo "  -h  --help                  Show this message"
  echo "  -v  --verbose               Show all commands before running them (default: on)"
  echo "  -q  --quiet                 Don't display commands before running them (default: off)"
  echo "  -e  --explain  --dry-run    Don't actually run commands (default: off)"
  echo
  echo "  remote                      Which remote we should push to (default: origin)"
  echo
}

for arg in "$@"; do
  case $arg
  in
    -e | --explain | --dry-run)
      explain=true
      verbose=true
      run=false
      ;;
    -v | --verbose)
      verbose=true
      ;;
    -q | --quiet)
      verbose=false
      ;;
    -h | --help)
      printUsage
      exit
      ;;
    -*)
      echo "$0: unrecognized parameter '$arg'"
      printUsage
      exit 1
      ;;
    *)
      REMOTE=$arg
  esac
done

# colors
RED="\033[0;31m"
YELLOW="\033[1;33m"
GREEN="\033[0;32m"
NO_COLOR="\033[0m"

die() {
  echo "${RED}${@}${NO_COLOR}"
  exit 1
}

warn() {
  echo "${YELLOW}${@}${NO_COLOR}"
}

good() {
  echo "${GREEN}${@}${NO_COLOR}"
}

#git stuff
GIT=`which git`

git() {
  if [[ "$verbose" == true ]]; then
    echo "+ ${GREEN}git $@${NO_COLOR}"
  fi

  if [[ "$run" == true ]]; then
    eval "$GIT $@"
  fi
}

if [[ "$explain" == true ]]; then
  echo "These are the commands that would be run:"
fi

if [[ -z "$REMOTE" ]]; then
  REMOTE=`$GIT config branch.$CURRENT.remote`
fi

if [[ -z "$REMOTE" ]]; then
  REMOTE=origin
fi

TRACK=`$GIT config branch.$CURRENT.merge`

if [[ -z "$TRACK" ]]; then
  TRACK=refs/heads/master
fi

TRACK_BRANCH=${TRACK/refs\/heads\//}

if [[ "$CURRENT" != "$TRACK_BRANCH" ]]; then
  git checkout $TRACK_BRANCH ||
    die "Could not switch to $TRACK_BRANCH. Nothing has been changed yet."
fi

$GIT svn info >/dev/null 2>/dev/null
if [[ $? == 0 ]]; then
  TYPE="git-svn"
else
  TYPE="git"
fi

if [[ "$TYPE" == "git-svn" ]]; then
  git rebase $CURRENT ||
    die "Could not rebase against $CURRENT. You may need to resolve conflicts."
  git svn dcommit ||
    die "Failed to commit to the upstream Subversion server. Check your network connection."
else
  if [[ "$CURRENT" != "$TRACK_BRANCH" ]]; then
    git merge $CURRENT ||
      die "Could not merge branch $CURRENT into $TRACK_BRANCH. You may need to resolve conflicts."
  fi
  git push $REMOTE $TRACK_BRANCH ||
    die "Could not push changes to $REMOTE/$TRACK_BRANCH. Check your network connection."
fi

if [[ "$CURRENT" != "$TRACK_BRANCH" ]]; then
  git checkout $CURRENT ||
    die "Could not switch back to $CURRENT from $TRACK_BRANCH."
fi

if [[ "$TYPE" == "git-svn" ]]; then
  git svn rebase ||
    die "Could not complete the rebase from the upstream Subversion server."
fi

if [[ "$run" != true ]]; then
  good "Successfully shipped your changes from $CURRENT to $REMOTE"
fi
